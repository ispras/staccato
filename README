################################################################################
#   Staccato: Disjoint Support Decompositions from BDDs                        #
#   Copyright (C) 2003-2010  University of Michigan                            #
#   http://www.eecs.umich.edu/staccato                                         #
#                                                                              #
#   Contributors include Stephen Plaza and Valeria Bertacco                    #
#                                                                              #
#   This library is free software; you can redistribute it and/or              #
#   modify it under the terms of the GNU Lesser General Public                 #
#   License as published by the Free Software Foundation; either               #
#   version 2.1 of the License, or (at your option) any later version.         #
#                                                                              #
#   This library is distributed in the hope that it will be useful,            #
#   but WITHOUT ANY WARRANTY; without even the implied warranty of             #
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU          #
#   Lesser General Public License for more details.                            #
#                                                                              #
#   You should have received a copy of the GNU Lesser General Public           #
#   License along with this library; if not, write to the Free Software        #
#   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA              #
#   02110-1301  USA                                                            #
#                                                                              #
#   Stephen Plaza <splaza@umich.edu>                                           #
#   Valeria Bertacco <valeria@umich.edu>                                       #
#                                                                              #
#   University of Michigan                                                     #
#   Electrical Engineering and Computer Science Dept.                          #
#   2260 Hayward St.                                                           #
#   Ann Arbor, MI 48109-2121                                                   #
################################################################################


DISCLAIMER

Effort has been made to ensure the correctness and safeness of this
package.  However, the authors take no responsibility for any problems
that may result from using the DSD package.  Thus, use this package at
your own risk.

INSTALLATION

Installation of the DSD package simply requires the user to follow
instructions in INSTALL. 


INSTRUCTIONS ON COMPILING AND LINKING AN APPLICATION

The user should simply include the file 'DSDInterface.h'.  This file
contains the functions that will be of primary use for anyone working
with the CUDD package.  'DSDInterface.h' already includes all the
necessary CUDD header files.  When compiling, the user should point the
compiler to the include directory in the DSD package.  Also, the library,
'libdsd.a', needs to be linked with the user's program after linking in
all of the CUDD libraries.

E.G.

g++ test.c -lcudd -lmtr -lst -lutil -ldsd

INSTRUCTIONS ON USING THE DSD APPLICATION

Most of the functionality, as stated before, can be found in the
DSDInterface.h file.  In general, a user would use this package very
similarly to CUDD.  This parallelism was intentional to make
the package intuitive to most familiar with CUDD.

The user should first call 'DSD_Init' after calling 'Cudd_Init'.  The
user may find the following functions useful:

-DSDNode *DSD_Create(DSDManager* manager, DdNode *f)
creates a disjoint decomposition of a particular bdd

-DdNode *Get_Symbolic_Decomposition(DSDNode *dsd_node)
return a symbolic bdd representing the decomposition created

-DdNode *Get_BDD(DSDNode* dsd_node)
return a the original bdd that the decomposition is representing

The package also makes use of garbage collection, refs/derefs, and
complement edges in analogous way to CUDD.

When done with the package the function, 'DSD_Quit', should be called.

Online documentation should be available shortly.

TO DO

Currently the parameter, 'recommendation_size', in 'DSD_Init', does
nothing and can just be set to zero.

Dynamic resizing of structures and garbage collection is still premature
in its functionality.  I need to just sit down for a few hours to
implement these improvements.

Eventually support for more generically constructed symbolic bdds will be
implemented.	


PLATFORMS

The DSD package has only been tested on a PC running Linux Redhat. 
Outside of changes to the Makefile, it is likely that the program would
work on any platform that CUDD works on.

RELEASE INFORMATION

1.1  This version lack support for variable reordering.  Also, STACCATO
is still limited to 16384 as being the highest index for a BDD variable.

1.2  Added some comments to make the code more readable

FEEDBACK

This package is still seeing several changes and improvements.  If there
are any questions concerning the correctness or use of the package,
please contact:

Stephen Plaza
email: staccato@eecs.umich.edu
